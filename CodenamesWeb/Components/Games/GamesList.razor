@inject IJSRuntime _js

<div class="game-list-layout">
    <div class="w-100 d-flex justify-content-between">
        <div class="game-code-block d-flex gap-5">
            <div class="d-flex flex-column">
                <div class="game-code-label ibm-plex-mono-regular">
                    Код кімнати
                </div>
                <div class="game-code-text ibm-plex-mono-bold">
                    #@GameRoomCode
                </div>
            </div>
            <button @onclick="CopyTextToClipboard">
                <CopyIcon Size="2vw" />
            </button>
        </div>
        <button>
            <DoorIcon Size="2vw" />
        </button>
    </div>
    <div class="game-list-table-container">
        <table id="game-list-table" class="game-list-table">
            <thead class="ibm-plex-mono-regular">
                <tr>
                    <td>
                        Id
                    </td>
                    <td>
                        В кімнаті/максимально
                    </td>
                    <td>
                        Якісь інші налаштування
                    </td>
                </tr>
            </thead>
            <tbody class="ibm-plex-mono-regular">
                @foreach (var game in Games)
                {
                    <tr>
                        <td>@game.Id</td>
                        <td>@game.PlayersCount / @game.MaxPlayersCount</td>
                        <td></td>
                    </tr>
                }
                <tr id="last-row">
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@code {

    [Parameter]
    public List<GameDto> Games { get; set; } = new(new[]
    {
        new GameDto(1, 4),
        new GameDto(2, 12),
        new GameDto(3, 2),
        new GameDto(4, 3),
        new GameDto(5, 1,8),
        new GameDto(6, 8,8),
        new GameDto(7, 12),
        new GameDto(8, 0),
        new GameDto(9, 0),
        new GameDto(10, 0),
        new GameDto(11, 3)
    });

    public string GameRoomCode { get; set; } = "D9812SdgfD3";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await _js.InvokeVoidAsync("calculateLastRowHeight");
            StateHasChanged();
        }
    }

    private async Task CopyTextToClipboard()
    {
        await _js.InvokeVoidAsync("clipboardCopy.copyText", GameRoomCode);
    }

}
