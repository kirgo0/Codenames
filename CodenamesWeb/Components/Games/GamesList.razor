@inject IJSRuntime _js

@*ready to clear*@
<div class="d-flex flex-column gap-default game-list-layout">
    <div class="w-100 d-flex justify-content-between">
        @*ready to clear*@
        <div class="d-flex gap-default br-default game-code-block">
            <div class="d-flex flex-column">
                @*ready to clear*@
                <div class="game-code-label ibm-plex-mono-regular">
                    Код кімнати
                </div>
                @*ready to clear*@
                <div class="text-uppercase game-code-text ibm-plex-mono-bold">
                    #@GameRoomCode
                </div>
            </div>
            <button @onclick="CopyTextToClipboard">
                <CopyIcon Size="2vw" />
            </button>
        </div>
        <button>
            <DoorIcon Size="2vw" />
        </button>
    </div>
    @*ready to clear*@
    <div class="w-100 game-list-table-container">
        @*ready to clear*@
        <table id="game-list-table" class="w-100 m-0 game-list-table text-end">
            @*ready to clear*@
            <thead class="ibm-plex-mono-regular">
                <tr>
                    <td>
                        Id
                    </td>
                    <td>
                        В кімнаті/максимально
                    </td>
                    <td>
                        Якісь інші налаштування
                    </td>
                </tr>
            </thead>
            @*ready to clear*@
            <tbody class="ibm-plex-mono-regular">
                @foreach (var game in Games)
                {
                    <tr>
                        <td>@game.Id</td>
                        <td>@game.PlayersCount / @game.MaxPlayersCount</td>
                        <td></td>
                    </tr>
                }
                <tr id="last-row">
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@code {

    [Parameter]
    public List<GameDto> Games { get; set; } = new(new[]
    {
        new GameDto(1, 4),
        new GameDto(2, 12),
        new GameDto(3, 2),
        new GameDto(4, 3),
        new GameDto(5, 1,8),
        new GameDto(6, 8,8),
        new GameDto(7, 12),
        new GameDto(8, 0),
        new GameDto(9, 0),
        new GameDto(10, 0),
        new GameDto(11, 3)
    });

    public string GameRoomCode { get; set; } = "D9812SdgfD3";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await _js.InvokeVoidAsync("calculateLastRowHeight");
            StateHasChanged();
        }
    }

    private async Task CopyTextToClipboard()
    {
        await _js.InvokeVoidAsync("clipboardCopy.copyText", GameRoomCode);
    }

}
